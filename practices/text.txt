# positioning & sizing grid-items inside a grid 

  grid-row-start: start-line;
  grid-row-end: end-line;

  grid-column-start: start-line;
  grid-column-end: end-line;


# grid-items alignment(align a single grid-item using )
  
  justify-self:;
  align-self:;


# grid-container-sizing 

  grid-template-rows: 100px 100px 100px;
  grid-template-columns: repeat(3, 1fr);
  row-gap: 10px;
  column-gap: 10px;
  grid-auto-rows: minmax(50px, auto);
  grid-auto-columns: minmax(50px, auto)


# grid gutters is basically adding some space/padding between grid-items(container properties)

  row-gap: 10px; used to add some gap between rows

  column-gap: 10px; used to add some gap between columns


# css grid flow algorithm (container properties) specifying exactly how auto-placed items get flowed into the grid.

  grid-auto-flow: row(default) | column(items will stack vertically and then split over to the next column)


# Explicit vs Implicit Grid: to control implicit grid-items

  grid-auto-rows: 100px;
  grid-auto-columns: 100px;


# grid container alignment

  grid-template-area:;
  justify-items: ;
  align-items: ;
  justify-content: ;
  align-content: ;


# align all-grid items globally from container 
 
  justify-items: center | end | start | etc.;
  align-items: center | end | start | etc.;


# how to align the entire grid 
 
  justify-content: center | end 
  align-content: center | end



# shorthand css grid
  
  grid-area: grid-row-start / grid-column-start / grid-row-end / grid-column-end

  grid-row: grid-row-start / grid-row-end

  grid-column: grid-column-start / grid-column-end


  grid: grid-auto-columns / grid-auto-flow 
  /  grid-auto-rows / grid-template-areas /   grid-template-columns / grid-template-rows

  grid-template: grid-template-columns / grid-template-rows / grid-template-areas

  gap (grid-gap): row-gap(grid-row-gap) / column-gap(grid-column-gap)




